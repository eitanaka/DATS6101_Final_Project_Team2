colors = c("#6D9EC1", "white", "#E46726"), legend.title = "Correlation",
ggtheme = theme_gray, title = "Highly Correlated Variables with mhlth")
corrplot(high_dep_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = colorRampPalette(c("white", "blue"))(20), main = "Highly Correlated Variables with DEPRESSION", mar = c(0,0,0,0))
corrplot(high_mhlth_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = colorRampPalette(c("white", "blue"))(20), main = "Highly Correlated Variables with mhlth", mar = c(0,0,0,0))
calculate_VIF <- function(data, target_col) {
X <- data[, !colnames(data) %in% target_col]
vif <- data.frame(
Feature = colnames(X),
VIF = apply(X, 2, function(x) vif(lm(x ~ ., data=X)))
)
return(vif)
}
depression_VIF <- calculate_VIF(new_num_df[high_dep_cor_list], "DEPRESSION")
mhlth_VIF <- calculate_VIF(new_num_df[high_mhlth_cor_list], "MHLTH")
depression_VIF
mhlth_VIF
dep_features_list <- high_dep_cor_list[high_dep_cor_list != "DEPRESSION"]
mhlth_features_list <- high_mhlth_cor_list[high_mhlth_cor_list != "MHLTH"]
dep_features_list
mhlth_features_list
# multiple linear regression model for depression
depression_model_1 <- lm(DEPRESSION ~ OBESITY + PHLTH + ea.hs.grad + EA_Graduate_or_professional_degree + MI_Estimate + `CT_>60` + hhd.broad, data = new_num_df)
# Some of common RMD options (and the defaults) are:
# include=T, eval=T, echo=T, results='hide'/'asis'/'markup',..., collapse=F, warning=T, message=T, error=T, cache=T, fig.width=6, fig.height=4, fig.dim=c(6,4) #inches, fig.align='left'/'center','right',
knitr::opts_chunk$set(warning = F, results = "hide", message = F)
# Can globally set option for number display format.
options(scientific=T, digits = 3)
# options(scipen=9, digits = 3)
# Import Libraries
rm(list=ls())
library(readr)
library(ggplot2)
library(tidyr)
library(corrplot)
library(ezids)
library(car)
library(rpart)
library(rpart.plot)
library(rattle)
url <- 'https://raw.githubusercontent.com/eitanaka/DATS6101_Final_Project_Team2/main/data_set/geo_socio_health_df.csv'
master_df<- read_csv(url)
master_df <- master_df[,-1]
# To rename some columns in a data frame to make them more readable and easier to work with.This is done by using the "colnames" function to first select the column names that match the original names, and then assigning new names.
colnames(master_df)[colnames(master_df) == "MT_Never Married"] <- "MT_never_married"
colnames(master_df)[colnames(master_df) == "MT_Now married"] <- "MT_now_married"
colnames(master_df)[colnames(master_df) == "Total Population"] <- "total_population"
colnames(master_df)[colnames(master_df) == "EA_Less than high school graduate"] <- "EA_Less_than_high_school_graduate"
colnames(master_df)[colnames(master_df) == "EA_High school graduate"] <- "ea.hs.deg"
colnames(master_df)[colnames(master_df) == "EA_college or associate's degree"] <- "ea.col.ass.deg"
colnames(master_df)[colnames(master_df) == "EA_Bachelor's degree"] <- "ea.ba.deg"
colnames(master_df)[colnames(master_df) == "EA_Graduate or professional degree"] <- "ea.grad.prof.deg"
# Create a new data only including numerical variable
numeric_vars <- sapply(master_df, is.numeric)
num_df <- master_df[, numeric_vars]
head(num_df)
str(num_df)
colSums(is.na(num_df))
num_df <- na.omit(num_df)
colSums(is.na(num_df))
colSums(num_df == 0.0)
new_num_df <- outlierKD2(num_df, num_df[[1]], rm=TRUE)
new_num_df <- new_num_df[,1:(ncol(new_num_df)-2)]
# loop through all columns
for (col_name in colnames(num_df)[2:ncol(num_df)]) {
# remove outliers
new_num_df <- outlierKD2(new_num_df, new_num_df[[col_name]], rm=TRUE)
new_num_df <- na.omit(new_num_df)
new_num_df <- new_num_df[,1:(ncol(new_num_df)-2)]
}
new_num_df <- new_num_df[,1:(ncol(new_num_df)-1)]
# with outliers
par(mfrow=c(8, 8))
par(mar=c(1, 1, 1, 1))
for (i in 1:ncol(num_df)) {
boxplot(num_df[[i]], main=names(num_df)[i])
}
# without outliers
par(mfrow=c(8, 8))
par(mar=c(1, 1, 1, 1))
for (i in 1:ncol(new_num_df)) {
boxplot(new_num_df[[i]], main=names(new_num_df)[i])
}
# Scatter plots with fit line for Depression and other dependent variables
for (col in names(new_num_df)) {
if (col != "DEPRESSION") {
plot_data <- data.frame(x = new_num_df$DEPRESSION, y = new_num_df[[col]])
plot <- ggplot(plot_data, aes(x = x, y = y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
xlab("Depression") +
ylab(col)
print(plot)
}
}
# Scatter plots with fit line for mhlth and other dependent variables
for (col in names(new_num_df)) {
if (col != "MHLTH") {
plot_data <- data.frame(x = new_num_df$MHLTH, y = new_num_df[[col]])
plot <- ggplot(plot_data, aes(x = x, y = y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
xlab("mhlth") +
ylab(col)
print(plot)
}
}
str(new_num_df)
summary(new_num_df)
# Histograms
# Two histograms: one for the distribution of tract-level depression rates and one for the distribution of tract-level poor mental health rates.
hist(new_num_df$DEPRESSION, main = "Distribution of Tract-level Depression Rates")
hist(new_num_df$MHLTH, main = "Distribution of Tract-level Poor Mental Health Rates")
# QQ plots for the distribution of tract-level depression rates and tract-level poor mental health rates.
qqnorm(new_num_df$DEPRESSION, main = "Distribution of Tract-level Depression Rates")
qqline(new_num_df$DEPRESSION)
qqnorm(new_num_df$MHLTH, main = "Distribution of Tract-level Poor Mental Health Rates")
qqline(new_num_df$MHLTH)
# Create a correlation matrix
cor_matrix <- cor(new_num_df)
# Create two lists which have the names of variables highly correlated (more then 0.3 or less than -0.3)
high_dep_cor_list <- names(which(cor_matrix["DEPRESSION",] > 0.35 | cor_matrix["DEPRESSION",] < -0.35))
high_mhlth_cor_list <- names(which(cor_matrix["MHLTH",] > 0.5 | cor_matrix["MHLTH",] < -0.5))
high_dep_cor_list <- high_dep_cor_list[high_dep_cor_list != "MHLTH"]
high_mhlth_cor_list <- high_mhlth_cor_list[high_mhlth_cor_list != "DEPRESSION"]
length(high_dep_cor_list)
length(high_mhlth_cor_list)
# Create two correlation matrixes from new_num_df in the above lists
high_dep_cor_mat <- cor(new_num_df[high_dep_cor_list])
high_mhlth_cor_mat <- cor(new_num_df[high_mhlth_cor_list])
high_dep_cor_mat
high_mhlth_cor_mat
# Plot above correlation matrix
corrplot(high_dep_cor_mat, type = "lower", outline.color = "white",
colors = c("#6D9EC1", "white", "#E46726"), legend.title = "Correlation",
ggtheme = theme_gray, title = "Highly Correlated Variables with DEPRESSION")
corrplot(high_mhlth_cor_mat, type = "lower", outline.color = "white",
colors = c("#6D9EC1", "white", "#E46726"), legend.title = "Correlation",
ggtheme = theme_gray, title = "Highly Correlated Variables with mhlth")
corrplot(high_dep_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = colorRampPalette(c("white", "blue"))(20), main = "Highly Correlated Variables with DEPRESSION", mar = c(0,0,0,0))
corrplot(high_mhlth_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = colorRampPalette(c("white", "blue"))(20), main = "Highly Correlated Variables with mhlth", mar = c(0,0,0,0))
calculate_VIF <- function(data, target_col) {
X <- data[, !colnames(data) %in% target_col]
vif <- data.frame(
Feature = colnames(X),
VIF = apply(X, 2, function(x) vif(lm(x ~ ., data=X)))
)
return(vif)
}
depression_VIF <- calculate_VIF(new_num_df[high_dep_cor_list], "DEPRESSION")
mhlth_VIF <- calculate_VIF(new_num_df[high_mhlth_cor_list], "MHLTH")
depression_VIF
mhlth_VIF
dep_features_list <- high_dep_cor_list[high_dep_cor_list != "DEPRESSION"]
mhlth_features_list <- high_mhlth_cor_list[high_mhlth_cor_list != "MHLTH"]
dep_features_list
mhlth_features_list
# multiple linear regression model for depression
depression_model_1 <- lm(DEPRESSION ~ OBESITY + PHLTH + ea.hs.deg + ea.grad.prof.deg + MI_Estimate + `CT_>60` + hhd.broad, data = new_num_df)
# multiple linear regression model for poor mental health
mhlth_model_1 <- lm(MHLTH ~ LPA + OBESITY + PHLTH + SLEEP + ea.hs.deg + ea.ba.deg + ea.grad.prof.deg + MI_Estimate + poverty, data = new_num_df)
summary(depression_model_1)
summary(mhlth_model_1)
plot(depression_model_1)
plot(mhlth_model_1)
# multiple linear regression model for depression
depression_model_2 <- lm(DEPRESSION ~ OBESITY + PHLTH, data = new_num_df)
# multiple linear regression model for poor mental health
mhlth_model_2 <- lm(MHLTH ~ LPA + OBESITY + PHLTH + SLEEP, data = new_num_df)
summary(depression_model_2)
summary(mhlth_model_2)
plot(depression_model_2)
plot(mhlth_model_2)
# multiple linear regression model for depression
depression_model_3 <- lm(DEPRESSION ~ ea.hs.deg + ea.grad.prof.deg + MI_Estimate + `CT_>60` + hhd.broad, data = new_num_df)
# multiple linear regression model for poor mental health
mhlth_model_3 <- lm(MHLTH ~ ea.hs.deg + ea.ba.deg + ea.grad.prof.deg + MI_Estimate + poverty, data = new_num_df)
summary(depression_model_3)
summary(mhlth_model_3)
plot(depression_model_3)
plot(mhlth_model_3)
# Perform two-way ANOVA test
depression_anova_model <- anova(depression_model_1, depression_model_2, depression_model_3)
mhlth_anova_model <- anova(mhlth_model_1, mhlth_model_2, mhlth_model_3)
xkabledply(depression_anova_model)
xkabledply(mhlth_anova_model)
# Perform stepwise selection using AIC as the selection criterion
depression_stepwise_model <- step(depression_model_1, direction = "both", trace = 0, k = log(nrow(new_num_df)), criterion = "AIC")
mhlth_stepwise_model <- step(mhlth_model_1, direction = "both", trace = 0, k = log(nrow(new_num_df)), criterion = "AIC")
# Print the final selected model
summary(depression_stepwise_model)
summary(mhlth_stepwise_model)
# The Durbin-Watson test
library(lmtest)
depression_dwtest <- dwtest(depression_model_1)
mhlth_dwtest <- dwtest(mhlth_model_1)
depression_dwtest
mhlth_dwtest
# Breusch-Pagan test
bptest(depression_model_1)
bptest(mhlth_model_1)
# Cook's distance and Leverage
# depression
depression_influential <- influence.measures(depression_model_1)
depression_infmat <- depression_influential$infmat
sum(depression_infmat[, 'cook.d'] > 1)
sum(depression_infmat[, 'hat'] > 2 * 7 / length(depression_infmat[, 'hat']))
# mhlth
mhlth_influential <- influence.measures(mhlth_model_1)
mhlth_infmat <- mhlth_influential$infmat
sum(mhlth_infmat[, 'cook.d'] > 1)
sum(mhlth_infmat[, 'hat'] > 2 * 7 / length(depression_infmat[, 'hat']))
#regression tree model for depression
# control_params1 <- rpart.control(minsplit = 20, cp = 0.0005, maxdepth = 10)
#
# depression.tree <- rpart(DEPRESSION ~ LPA + ea.hs.deg + ea.ba.deg + ea.grad.prof.deg + MI_Estimate + URBANIZED_AREA_POP_CEN_2010 + pct_URBANIZED_AREA_POP_CEN_2010, data = depression_cor_df, method="class", control = control_params1)
#
# plot(depression.tree, uniform=TRUE, main="Depression Rate Tree")
# text(depression.tree, use.n=TRUE, all=TRUE, cex=.8)
#
# p <- prp(depression.tree)
# p$nodepar$lab.cex <- 0.8
# p$nodepar$cex <- 0.8
# p$nodepar$lab.col <- "black"
#
#
# # regression tree model for poor mental health
# control_params2 <- rpart.control(minsplit = 20, cp = 0.0005, maxdepth = 10)
#
# mhlth.tree <- rpart(MHLTH ~ LPA + SLEEP + MT_never_married + MT_now_married + MT_Separated + EA_Less_than_high_school_graduate + ea.hs.deg + ea.ba.deg + ea.grad.prof.deg + MI_Estimate + ES_Civilian_labor_force_employed + ES_Civilian_labor_force_unemployed, data = mhlth_cor_df, method = "class", control = control_params2)
#
# plot(mhlth.tree, uniform=TRUE, main="Poor Mental Health Rate Tree")
# text(mhlth.tree, use.n=TRUE, all=TRUE, cex=.8)
#
# p <- prp(mhlth.tree)
# p$nodepar$lab.cex <- 0.8
# p$nodepar$cex <- 0.8
# p$nodepar$lab.col <- "black"
# fancy tree plots
# fancy depression tree
depression.tree.2 <- rpart(DEPRESSION ~ LPA + ea.hs.deg + ea.ba.deg + ea.grad.prof.deg + MI_Estimate + URBANIZED_AREA_POP_CEN_2010 + pct_URBANIZED_AREA_POP_CEN_2010, data = depression_cor_df)
#regression tree model for depression
# control_params1 <- rpart.control(minsplit = 20, cp = 0.0005, maxdepth = 10)
#
# depression.tree <- rpart(DEPRESSION ~ LPA + ea.hs.deg + ea.ba.deg + ea.grad.prof.deg + MI_Estimate + URBANIZED_AREA_POP_CEN_2010 + pct_URBANIZED_AREA_POP_CEN_2010, data = depression_cor_df, method="class", control = control_params1)
#
# plot(depression.tree, uniform=TRUE, main="Depression Rate Tree")
# text(depression.tree, use.n=TRUE, all=TRUE, cex=.8)
#
# p <- prp(depression.tree)
# p$nodepar$lab.cex <- 0.8
# p$nodepar$cex <- 0.8
# p$nodepar$lab.col <- "black"
#
#
# # regression tree model for poor mental health
# control_params2 <- rpart.control(minsplit = 20, cp = 0.0005, maxdepth = 10)
#
# mhlth.tree <- rpart(MHLTH ~ LPA + SLEEP + MT_never_married + MT_now_married + MT_Separated + EA_Less_than_high_school_graduate + ea.hs.deg + ea.ba.deg + ea.grad.prof.deg + MI_Estimate + ES_Civilian_labor_force_employed + ES_Civilian_labor_force_unemployed, data = mhlth_cor_df, method = "class", control = control_params2)
#
# plot(mhlth.tree, uniform=TRUE, main="Poor Mental Health Rate Tree")
# text(mhlth.tree, use.n=TRUE, all=TRUE, cex=.8)
#
# p <- prp(mhlth.tree)
# p$nodepar$lab.cex <- 0.8
# p$nodepar$cex <- 0.8
# p$nodepar$lab.col <- "black"
# fancy tree plots
# fancy depression tree
depression.tree.2 <- rpart(DEPRESSION ~ LPA + ea.hs.deg + ea.ba.deg + ea.grad.prof.deg + MI_Estimate + URBANIZED_AREA_POP_CEN_2010 + pct_URBANIZED_AREA_POP_CEN_2010, data = new_num_df)
my_col <- colorRampPalette(c("red", "white", "blue"))(20)
my_col <- colorRampPalette(c("red", "white", "blue"))(20)
corrplot(high_dep_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "Highly Correlated Variables with DEPRESSION", mar = c(0,0,0,0))
corrplot(high_mhlth_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "Highly Correlated Variables with mhlth", mar = c(0,0,0,0))
# Some of common RMD options (and the defaults) are:
# include=T, eval=T, echo=T, results='hide'/'asis'/'markup',..., collapse=F, warning=T, message=T, error=T, cache=T, fig.width=6, fig.height=4, fig.dim=c(6,4) #inches, fig.align='left'/'center','right',
knitr::opts_chunk$set(warning = F, results = "hide", message = F)
# Can globally set option for number display format.
options(scientific=T, digits = 3)
# options(scipen=9, digits = 3)
# Import Libraries
rm(list=ls())
library(readr)
library(ggplot2)
library(tidyr)
library(corrplot)
library(ezids)
library(car)
library(rpart)
library(rpart.plot)
library(rattle)
url <- 'https://raw.githubusercontent.com/eitanaka/DATS6101_Final_Project_Team2/main/data_set/geo_socio_health_df.csv'
master_df<- read_csv(url)
master_df <- master_df[,-1]
# To rename some columns in a data frame to make them more readable and easier to work with.This is done by using the "colnames" function to first select the column names that match the original names, and then assigning new names.
colnames(master_df)[colnames(master_df) == "MT_Never Married"] <- "mt.nev.mar"
colnames(master_df)[colnames(master_df) == "MT_Now married"] <- "mt.now.mar"
colnames(master_df)[colnames(master_df) == "Total Population"] <- "tot.pop"
colnames(master_df)[colnames(master_df) == "EA_Less than high school graduate"] <- "ea.less.hs.deg"
colnames(master_df)[colnames(master_df) == "EA_High school graduate"] <- "ea.hs.deg"
colnames(master_df)[colnames(master_df) == "EA_college or associate's degree"] <- "ea.col.ass.deg"
colnames(master_df)[colnames(master_df) == "EA_Bachelor's degree"] <- "ea.ba.deg"
colnames(master_df)[colnames(master_df) == "EA_Graduate or professional degree"] <- "ea.grad.prof.deg"
# Create a new data only including numerical variable
numeric_vars <- sapply(master_df, is.numeric)
num_df <- master_df[, numeric_vars]
head(num_df)
str(num_df)
colSums(is.na(num_df))
num_df <- na.omit(num_df)
colSums(is.na(num_df))
colSums(num_df == 0.0)
new_num_df <- outlierKD2(num_df, num_df[[1]], rm=TRUE)
new_num_df <- new_num_df[,1:(ncol(new_num_df)-2)]
# loop through all columns
for (col_name in colnames(num_df)[2:ncol(num_df)]) {
# remove outliers
new_num_df <- outlierKD2(new_num_df, new_num_df[[col_name]], rm=TRUE)
new_num_df <- na.omit(new_num_df)
new_num_df <- new_num_df[,1:(ncol(new_num_df)-2)]
}
new_num_df <- new_num_df[,1:(ncol(new_num_df)-1)]
# with outliers
par(mfrow=c(8, 8))
par(mar=c(1, 1, 1, 1))
for (i in 1:ncol(num_df)) {
boxplot(num_df[[i]], main=names(num_df)[i])
}
# without outliers
par(mfrow=c(8, 8))
par(mar=c(1, 1, 1, 1))
for (i in 1:ncol(new_num_df)) {
boxplot(new_num_df[[i]], main=names(new_num_df)[i])
}
# Scatter plots with fit line for Depression and other dependent variables
for (col in names(new_num_df)) {
if (col != "DEPRESSION") {
plot_data <- data.frame(x = new_num_df$DEPRESSION, y = new_num_df[[col]])
plot <- ggplot(plot_data, aes(x = x, y = y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
xlab("Depression") +
ylab(col)
print(plot)
}
}
# Scatter plots with fit line for mhlth and other dependent variables
for (col in names(new_num_df)) {
if (col != "MHLTH") {
plot_data <- data.frame(x = new_num_df$MHLTH, y = new_num_df[[col]])
plot <- ggplot(plot_data, aes(x = x, y = y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
xlab("mhlth") +
ylab(col)
print(plot)
}
}
str(new_num_df)
summary(new_num_df)
# Histograms
# Two histograms: one for the distribution of tract-level depression rates and one for the distribution of tract-level poor mental health rates.
hist(new_num_df$DEPRESSION, main = "Distribution of Tract-level Depression Rates")
hist(new_num_df$MHLTH, main = "Distribution of Tract-level Poor Mental Health Rates")
# QQ plots for the distribution of tract-level depression rates and tract-level poor mental health rates.
qqnorm(new_num_df$DEPRESSION, main = "Distribution of Tract-level Depression Rates")
qqline(new_num_df$DEPRESSION)
qqnorm(new_num_df$MHLTH, main = "Distribution of Tract-level Poor Mental Health Rates")
qqline(new_num_df$MHLTH)
# Create a correlation matrix
cor_matrix <- cor(new_num_df)
# Create two lists which have the names of variables highly correlated (more then 0.3 or less than -0.3)
high_dep_cor_list <- names(which(cor_matrix["DEPRESSION",] > 0.35 | cor_matrix["DEPRESSION",] < -0.35))
high_mhlth_cor_list <- names(which(cor_matrix["MHLTH",] > 0.5 | cor_matrix["MHLTH",] < -0.5))
high_dep_cor_list <- high_dep_cor_list[high_dep_cor_list != "MHLTH"]
high_mhlth_cor_list <- high_mhlth_cor_list[high_mhlth_cor_list != "DEPRESSION"]
length(high_dep_cor_list)
length(high_mhlth_cor_list)
# Create two correlation matrixes from new_num_df in the above lists
high_dep_cor_mat <- cor(new_num_df[high_dep_cor_list])
high_mhlth_cor_mat <- cor(new_num_df[high_mhlth_cor_list])
high_dep_cor_mat
high_mhlth_cor_mat
# Plot above correlation matrix
corrplot(high_dep_cor_mat, type = "lower", outline.color = "white",
colors = c("#6D9EC1", "white", "#E46726"), legend.title = "Correlation",
ggtheme = theme_gray, title = "Highly Correlated Variables with DEPRESSION")
corrplot(high_mhlth_cor_mat, type = "lower", outline.color = "white",
colors = c("#6D9EC1", "white", "#E46726"), legend.title = "Correlation",
ggtheme = theme_gray, title = "Highly Correlated Variables with mhlth")
my_col <- colorRampPalette(c("red", "white", "blue"))(20)
corrplot(high_dep_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "Highly Correlated Variables with DEPRESSION", mar = c(0,0,0,0))
corrplot(high_mhlth_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "Highly Correlated Variables with mhlth", mar = c(0,0,0,0))
calculate_VIF <- function(data, target_col) {
X <- data[, !colnames(data) %in% target_col]
vif <- data.frame(
Feature = colnames(X),
VIF = apply(X, 2, function(x) vif(lm(x ~ ., data=X)))
)
return(vif)
}
depression_VIF <- calculate_VIF(new_num_df[high_dep_cor_list], "DEPRESSION")
mhlth_VIF <- calculate_VIF(new_num_df[high_mhlth_cor_list], "MHLTH")
depression_VIF
mhlth_VIF
dep_features_list <- high_dep_cor_list[high_dep_cor_list != "DEPRESSION"]
mhlth_features_list <- high_mhlth_cor_list[high_mhlth_cor_list != "MHLTH"]
dep_features_list
mhlth_features_list
# multiple linear regression model for depression
depression_model_1 <- lm(DEPRESSION ~ OBESITY + PHLTH + ea.hs.deg + ea.grad.prof.deg + MI_Estimate + `CT_>60` + hhd.broad, data = new_num_df)
# multiple linear regression model for poor mental health
mhlth_model_1 <- lm(MHLTH ~ LPA + OBESITY + PHLTH + SLEEP + ea.hs.deg + ea.ba.deg + ea.grad.prof.deg + MI_Estimate + poverty, data = new_num_df)
summary(depression_model_1)
summary(mhlth_model_1)
plot(depression_model_1)
plot(mhlth_model_1)
# multiple linear regression model for depression
depression_model_2 <- lm(DEPRESSION ~ OBESITY + PHLTH, data = new_num_df)
# multiple linear regression model for poor mental health
mhlth_model_2 <- lm(MHLTH ~ LPA + OBESITY + PHLTH + SLEEP, data = new_num_df)
summary(depression_model_2)
summary(mhlth_model_2)
plot(depression_model_2)
plot(mhlth_model_2)
# multiple linear regression model for depression
depression_model_3 <- lm(DEPRESSION ~ ea.hs.deg + ea.grad.prof.deg + MI_Estimate + `CT_>60` + hhd.broad, data = new_num_df)
# multiple linear regression model for poor mental health
mhlth_model_3 <- lm(MHLTH ~ ea.hs.deg + ea.ba.deg + ea.grad.prof.deg + MI_Estimate + poverty, data = new_num_df)
summary(depression_model_3)
summary(mhlth_model_3)
plot(depression_model_3)
plot(mhlth_model_3)
# Perform two-way ANOVA test
depression_anova_model <- anova(depression_model_1, depression_model_2, depression_model_3)
mhlth_anova_model <- anova(mhlth_model_1, mhlth_model_2, mhlth_model_3)
xkabledply(depression_anova_model)
xkabledply(mhlth_anova_model)
# Perform stepwise selection using AIC as the selection criterion
depression_stepwise_model <- step(depression_model_1, direction = "both", trace = 0, k = log(nrow(new_num_df)), criterion = "AIC")
mhlth_stepwise_model <- step(mhlth_model_1, direction = "both", trace = 0, k = log(nrow(new_num_df)), criterion = "AIC")
# Print the final selected model
summary(depression_stepwise_model)
summary(mhlth_stepwise_model)
# The Durbin-Watson test
library(lmtest)
depression_dwtest <- dwtest(depression_model_1)
mhlth_dwtest <- dwtest(mhlth_model_1)
depression_dwtest
mhlth_dwtest
# Breusch-Pagan test
bptest(depression_model_1)
bptest(mhlth_model_1)
# Cook's distance and Leverage
# depression
depression_influential <- influence.measures(depression_model_1)
depression_infmat <- depression_influential$infmat
sum(depression_infmat[, 'cook.d'] > 1)
sum(depression_infmat[, 'hat'] > 2 * 7 / length(depression_infmat[, 'hat']))
# mhlth
mhlth_influential <- influence.measures(mhlth_model_1)
mhlth_infmat <- mhlth_influential$infmat
sum(mhlth_infmat[, 'cook.d'] > 1)
sum(mhlth_infmat[, 'hat'] > 2 * 7 / length(depression_infmat[, 'hat']))
#regression tree model for depression
# control_params1 <- rpart.control(minsplit = 20, cp = 0.0005, maxdepth = 10)
#
# depression.tree <- rpart(DEPRESSION ~ LPA + ea.hs.deg + ea.ba.deg + ea.grad.prof.deg + MI_Estimate + URBANIZED_AREA_POP_CEN_2010 + pct_URBANIZED_AREA_POP_CEN_2010, data = depression_cor_df, method="class", control = control_params1)
#
# plot(depression.tree, uniform=TRUE, main="Depression Rate Tree")
# text(depression.tree, use.n=TRUE, all=TRUE, cex=.8)
#
# p <- prp(depression.tree)
# p$nodepar$lab.cex <- 0.8
# p$nodepar$cex <- 0.8
# p$nodepar$lab.col <- "black"
#
#
# # regression tree model for poor mental health
# control_params2 <- rpart.control(minsplit = 20, cp = 0.0005, maxdepth = 10)
#
# mhlth.tree <- rpart(MHLTH ~ LPA + SLEEP + mt.nev.mar + mt.now.mar + MT_Separated + ea.less.hs.deg + ea.hs.deg + ea.ba.deg + ea.grad.prof.deg + MI_Estimate + ES_Civilian_labor_force_employed + ES_Civilian_labor_force_unemployed, data = mhlth_cor_df, method = "class", control = control_params2)
#
# plot(mhlth.tree, uniform=TRUE, main="Poor Mental Health Rate Tree")
# text(mhlth.tree, use.n=TRUE, all=TRUE, cex=.8)
#
# p <- prp(mhlth.tree)
# p$nodepar$lab.cex <- 0.8
# p$nodepar$cex <- 0.8
# p$nodepar$lab.col <- "black"
# fancy tree plots
# fancy depression tree
depression.tree.2 <- rpart(DEPRESSION ~ LPA + ea.hs.deg + ea.ba.deg + ea.grad.prof.deg + MI_Estimate + URBANIZED_AREA_POP_CEN_2010 + pct_URBANIZED_AREA_POP_CEN_2010, data = new_num_df)
corrplot(high_dep_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "Highly Correlated Variables with DEPRESSION", cex.main = 0.8, mar = c(0,0,0,0))
corrplot(high_mhlth_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "Highly Correlated Variables with mhlth", cex.main = 0.8, mar = c(0,0,0,0))
my_col <- colorRampPalette(c("red", "white", "blue"))(20)
corrplot(high_dep_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "Highly Correlated Variables with DEPRESSION", cex.main = 0.5, mar = c(0,0,0,0))
corrplot(high_mhlth_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "Highly Correlated Variables with mhlth", cex.main = 0.5, mar = c(0,0,0,0))
my_col <- colorRampPalette(c("red", "white", "blue"))(20)
corrplot(high_dep_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "Highly Correlated Variables with DEPRESSION", mar = c(0,0,0,0))
corrplot(high_mhlth_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "Highly Correlated Variables with mhlth", mar = c(0,0,0,0))
my_col <- colorRampPalette(c("red", "white", "blue"))(20)
corrplot(high_dep_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "", mar = c(0,0,0,0))
corrplot(high_mhlth_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "", mar = c(0,0,0,0))
my_col <- colorRampPalette(c("red", "white", "blue"))(30)
corrplot(high_dep_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "", mar = c(0,0,0,0))
corrplot(high_mhlth_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "", mar = c(0,0,0,0))
my_col <- colorRampPalette(c("red", "white", "blue"))(20)
corrplot(high_dep_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "", mar = c(0,0,0,0))
corrplot(high_mhlth_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "", mar = c(0,0,0,0))
my_col <- colorRampPalette(c("red", "white", "blue"))(30)
corrplot(high_dep_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "", mar = c(0,0,0,0))
corrplot(high_mhlth_cor_mat, method = "number", type = "lower", order = "hclust", diag = FALSE, tl.col = "black", tl.cex = 0.8, cl.cex = 0.8, addCoef.col = "black", col = my_col, main = "", mar = c(0,0,0,0))
